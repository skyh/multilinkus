module.exports = Resource;


function Resource() {
	this.refCount_ = 1;
}


function assertResourceIsNotDestroyed(r) {
	if (r.refCount_ === 0) {
		throw new Error('Resource is destroyed.');
	}
}

Resource.prototype.refCount_ = 0;


Resource.prototype.addRef = function () {
	assertResourceIsNotDestroyed(this);
	++this.refCount_;
};

Resource.prototype.release = function () {
	assertResourceIsNotDestroyed(this);
	--this.refCount_;

	if (this.refCount_ === 0) {
		this.free();
	}
};

Resource.prototype.free = function () {
	var keys = Object.keys(this);

	for (var i = keys.length; i--;) {
		delete this[keys[i]];
	}
};
